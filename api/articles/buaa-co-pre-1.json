{"title":"北航计组-预习1-基本认识与数制","uid":"b8770cb77afe30b610a74e7f474f90fc","slug":"buaa-co-pre-1","date":"2024-07-26T16:00:00.000Z","updated":"2024-07-29T02:30:45.957Z","comments":true,"path":"api/articles/buaa-co-pre-1.json","keywords":null,"cover":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co1.jpg?x-oss-process=image/resize,w_1000","content":"<h1 id=\"基本认识\"><a href=\"#基本认识\" class=\"headerlink\" title=\"基本认识\"></a>基本认识</h1><h2 id=\"计算机的基本认识\"><a href=\"#计算机的基本认识\" class=\"headerlink\" title=\"计算机的基本认识\"></a>计算机的基本认识</h2><h3 id=\"发展过程\"><a href=\"#发展过程\" class=\"headerlink\" title=\"发展过程\"></a>发展过程</h3><ul>\n<li>ENIAC；第一台数字式多用途计算机<ul>\n<li>计算炮弹弹道（逃）</li>\n</ul>\n</li>\n<li>大型机时代：20c50s-60s</li>\n<li>小型机时代：20c70s</li>\n<li>PC时代：20c80s-21c</li>\n<li>后PC时代：21c之后</li>\n</ul>\n<h3 id=\"重大认识\"><a href=\"#重大认识\" class=\"headerlink\" title=\"重大认识\"></a>重大认识</h3><ol>\n<li>层次化表示与解释</li>\n</ol>\n<ul>\n<li>任何事物都可以表示为数字</li>\n</ul>\n<ol start=\"2\">\n<li>摩尔定律</li>\n</ol>\n<ul>\n<li>晶体管数量每两年翻倍</li>\n</ul>\n<ol start=\"3\">\n<li>局部性与存储层次</li>\n<li>并行性</li>\n<li>性能度量与改进</li>\n</ol>\n<h2 id=\"计算机的应用与分类\"><a href=\"#计算机的应用与分类\" class=\"headerlink\" title=\"计算机的应用与分类\"></a>计算机的应用与分类</h2><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ul>\n<li>PC</li>\n<li>服务器</li>\n<li>服务器集群</li>\n<li>超级计算机</li>\n<li>嵌入式计算机（最大的计算机市场）</li>\n</ul>\n<h2 id=\"计算机的基本硬件构成\"><a href=\"#计算机的基本硬件构成\" class=\"headerlink\" title=\"计算机的基本硬件构成\"></a>计算机的基本硬件构成</h2><h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><p><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co3.png\" alt=\"CPU\"><br>CPU是计算机的最核心部件，其功能是能够执行由一组指令构成的程序。<br>抽象为两个部分：数据通路、控制器</p>\n<ul>\n<li>数据通路：执行指令所需的计算与存储的功能部件集合<ul>\n<li>PC：指向要执行的指令</li>\n<li>ALU：完成各类计算，如加减乘除</li>\n<li>寄存器堆：临时性存储参与运算的数据以及运算结果</li>\n</ul>\n</li>\n<li>控制器：根据指令控制数据通路的各个部件完成相应操作</li>\n</ul>\n<p>评价为：数据通路是干活的鼠鼠，控制器是指使干活的可恶猫猫。</p>\n<p>而对于现代主流CPU：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co4.png\" alt=\"现代CPU\"><br>通常包含cache、MMU，每个核心相当于过去的一个完整CPU</p>\n<h3 id=\"主存储器\"><a href=\"#主存储器\" class=\"headerlink\" title=\"主存储器\"></a>主存储器</h3><p>也被称为内存，而CD、硬盘之类的东西叫做<strong>外存（辅存）</strong></p>\n<p>早期内存只有几个K，现在动辄以G字节计数。</p>\n<h2 id=\"计算机的层次结构\"><a href=\"#计算机的层次结构\" class=\"headerlink\" title=\"计算机的层次结构\"></a>计算机的层次结构</h2><p>一个完整的计算机系统，可以划分为硬件和软件两大部分。其中，两者之间的交互界面就是指令集：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co5.png\" alt=\"计算机系统\"></p>\n<h1 id=\"数制\"><a href=\"#数制\" class=\"headerlink\" title=\"数制\"></a>数制</h1><h2 id=\"常见进制及其转换\"><a href=\"#常见进制及其转换\" class=\"headerlink\" title=\"常见进制及其转换\"></a>常见进制及其转换</h2><h3 id=\"表示方法\"><a href=\"#表示方法\" class=\"headerlink\" title=\"表示方法\"></a>表示方法</h3><p>对于$d_{n-1}d_{n-2}…d_{1}d_{0}$来说，它的值是：</p>\n<p>$$<br>d_{n-1}*B^{n-1}+d_{n-2}*B^{n-2}+…+d_{0}*B^{0}<br>$$</p>\n<h3 id=\"二进制\"><a href=\"#二进制\" class=\"headerlink\" title=\"二进制\"></a>二进制</h3><p>每一位称之为一个bit。其基为{0,1}</p>\n<h3 id=\"进制转换\"><a href=\"#进制转换\" class=\"headerlink\" title=\"进制转换\"></a>进制转换</h3><p>其实就是转换前的数一直除以转换后进制的进制数，之后取余数，从最低位到最高位，比如10转2进制：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co6.png\" alt=\"10to2\"><br>16、8、2进制的互转比较容易，因为刚好可以对应。</p>\n<h2 id=\"常见术语\"><a href=\"#常见术语\" class=\"headerlink\" title=\"常见术语\"></a>常见术语</h2><ul>\n<li>字节<strong>byte</strong><ul>\n<li>由8个二进制位构成的一个元组，是目前计算机的数据单位</li>\n</ul>\n</li>\n<li>字<strong>word</strong><ul>\n<li>根据计算机的不同而不同，可能是32位、64位等等</li>\n</ul>\n</li>\n<li>最高有效位<strong>MSB</strong></li>\n<li>最低有效位<strong>LSB</strong></li>\n<li>最高有效字节<strong>MSB</strong></li>\n<li>最低有效字节<strong>LSB</strong><ul>\n<li>高在左，低在右</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二进制加法\"><a href=\"#二进制加法\" class=\"headerlink\" title=\"二进制加法\"></a>二进制加法</h2><h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><p>二进制加法与十进制加法原理类似，对应位相加就行，加到2就进位一个1即可：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co7.png\" alt=\"plus\"><br>由于一个字的长度是有限制的，比如32位计算机最高位两个1相加，此时就会发生<strong>溢出</strong>（overflow），一般来说，CPU在溢出发生时，会通过称为异常（exception）的机制来报告这个错误。</p>\n<h2 id=\"整数的二进制表示方法\"><a href=\"#整数的二进制表示方法\" class=\"headerlink\" title=\"整数的二进制表示方法\"></a>整数的二进制表示方法</h2><h3 id=\"数字\"><a href=\"#数字\" class=\"headerlink\" title=\"数字\"></a>数字</h3><p>对于一个数字来说，其包含2部分内容:</p>\n<ul>\n<li>编码：就是数字本身，或者说是一种记号。例如007</li>\n<li>语义：编码所代表的概念的含义，是对编码的解释</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>编码本身没有任何意义，编码只有被赋予语义后才有意义</p>\n</div>\n<h3 id=\"编码空间\"><a href=\"#编码空间\" class=\"headerlink\" title=\"编码空间\"></a>编码空间</h3><ul>\n<li>编码空间：有效编码的集合</li>\n<li>空间大小：有效编码的总数<ul>\n<li>对于一个n位B进制数来说，其编码空间大小为$B^n$</li>\n</ul>\n</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>Q：对于某个B进制来说，如何确定某个编码方案的编码位数？<br>A：如果对象数量为N，则位数为$\\lceil log^N_B \\rceil$</p>\n</div>\n<h3 id=\"二进制无符号数\"><a href=\"#二进制无符号数\" class=\"headerlink\" title=\"二进制无符号数\"></a>二进制无符号数</h3><p>对于二进制无符号数如下：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co8.png\" alt=\"binary\"></p>\n<h3 id=\"二进制符号数\"><a href=\"#二进制符号数\" class=\"headerlink\" title=\"二进制符号数\"></a>二进制符号数</h3><h4 id=\"原码方案\"><a href=\"#原码方案\" class=\"headerlink\" title=\"原码方案\"></a>原码方案</h4><p>用最高位代表符号，<strong>0为正1为负</strong>，其余位数为绝对值，比如：</p>\n<p>$$<br>0010_2 &#x3D; 2_{10}<br>$$</p>\n<p>$$<br>1010_2 &#x3D; -2_{10}<br>$$</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">缺点</p>\n<ol>\n<li>存在两个0，即$0000_2$和$1000_2$<ul>\n<li>有效编码被浪费</li>\n<li>硬件加法难以实现</li>\n</ul>\n</li>\n<li>编码数值不连续<ul>\n<li>并且在正负区域并非连续增大</li>\n</ul>\n</li>\n</ol>\n\n</div>\n<h4 id=\"补码方案\"><a href=\"#补码方案\" class=\"headerlink\" title=\"补码方案\"></a>补码方案</h4><p>用最高位代表符号，<strong>0为正1为负</strong>，100…000是最小的负数，而111…111是-1</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">特点</p>\n<p><ol>\n<li>只有一个0</li>\n<li>符号确定后，数值随编码增长而增长</li>\n</ol>\n</p>\n</div>\n<p>表示范围可以为-2147483648到2147483647</p>\n<p>对于一个$x_{N-1}x_{N-2}…x_{1}x_{0}$的N位二进制补码代表的数，它的值为：</p>\n<p>$$<br>x_{N-1} \\cdot (-2^{N-1})+\\sum\\limits_{i&#x3D;0}^{n-2}x_i \\cdot 2^i<br>$$</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">小结</p>\n<ul>\n<li>现代计算机普遍采用</li>\n<li>使用最高位作为符号位</li>\n<li>负数区间比正数区间多一个数</li>\n<li>相反数计算方法：各位取反，然后加1</li>\n</ul>\n\n</div>\n<h2 id=\"浮点数的二进制表示方法\"><a href=\"#浮点数的二进制表示方法\" class=\"headerlink\" title=\"浮点数的二进制表示方法\"></a>浮点数的二进制表示方法</h2><h3 id=\"浮点数格式\"><a href=\"#浮点数格式\" class=\"headerlink\" title=\"浮点数格式\"></a>浮点数格式</h3><p>每个浮点数都类似科学计数法可以表述为：$\\pm M \\cdot B^E$</p>\n<p>其中M为尾数，B为基数，E为指数<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co9.png\" alt=\"float\"></p>\n<ul>\n<li>包含符号S，尾数、指数、基数，其中基数被省略了</li>\n<li>符号一位，0正1负</li>\n<li>指数八位，表示范围</li>\n<li>尾数23位，表示精度</li>\n<li>基数默认为<strong>2</strong></li>\n</ul>\n<p>我们考虑到二进制尾数的第一位保证是<strong>1</strong>，如果不是的话说明指数取大了，那么为了优化，我们可以默认尾数最高位为1，这样就可以在尾数里面多一位有效的存储位了，只是计算的时候得补回来，我们以$5.23*10^{3}$为例：</p>\n<p>$$<br>5.23 \\times 10^{3}&#x3D;5230_{10}&#x3D;1010001101110_{2}&#x3D;1.010001101110_{2} \\times 2^{12}<br>$$<br>此时尾数1.010001101110，我们优化成<strong>010001101110</strong><br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co10.png\" alt=\"youhua\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>绝对值小于1的浮点数的二进制编码对应的数相比其大于1的数更大一些，因为其指数部分是负数，取补码的时候最高位为1，比指数为正的数字会更大一些。</p>\n</div>\n<h3 id=\"偏阶计数法\"><a href=\"#偏阶计数法\" class=\"headerlink\" title=\"偏阶计数法\"></a>偏阶计数法</h3><p>本质上就是把编码用的指数变成真实指数（的二进制）加上十进制的127，即$01111111_{2}$，此时就可以让$00000000_{2}$对应最小的负指数（即0减去127）了，同时$11111111_{2}$是最大的正指数（255减去127）<br><strong>但是由于一些特殊情况，比如正负无穷和NaN的存在，导致实际上最大正指数是254-127&#x3D;127，同理最小其实是1-127&#x3D;-126</strong><br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co11.png\" alt=\"pianjie\"></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>IEEE754浮点标准即此方法</p>\n</div>\n<p>此时表示范围也很明确了，比如正数范围最大是：$1.1111111111111111111111 \\times 2^{127} \\approx 3.402823 \\times 10^{38}$，即除了第一位符号位是0，其他位全为1的数字。正数范围最小则为后23位是1，指数为全0的数：$1.1111111111111111111111 \\times 2^{-126} \\approx 1.175494 \\times 10^{-38}$</p>\n<p>负数区间和正数区间完全对称，此处略。</p>\n<h3 id=\"双精度浮点\"><a href=\"#双精度浮点\" class=\"headerlink\" title=\"双精度浮点\"></a>双精度浮点</h3><p>IEEE754还规定了双精度浮点，也就是占据64位的浮点数，与单精度浮点区别如下：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co12.png\" alt=\"double\"></p>\n<p>范围绝对值为从$2.22507385850720 \\times 10^{-308}$到$1.79769313486232 \\times 10^{308}$</p>\n<h3 id=\"特殊情况\"><a href=\"#特殊情况\" class=\"headerlink\" title=\"特殊情况\"></a>特殊情况</h3><h4 id=\"编码规则\"><a href=\"#编码规则\" class=\"headerlink\" title=\"编码规则\"></a>编码规则</h4><p>如下表：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co13.png\" alt=\"spec\"></p>\n<h4 id=\"上溢和下溢\"><a href=\"#上溢和下溢\" class=\"headerlink\" title=\"上溢和下溢\"></a>上溢和下溢</h4><p>当一个数绝对值超过了上界就是上溢，当作<strong>正负无穷</strong>处理，如果绝对值在下界和0之间那就是下溢，当作<strong>0</strong>来处理</p>\n<h2 id=\"补码的几种常见运算\"><a href=\"#补码的几种常见运算\" class=\"headerlink\" title=\"补码的几种常见运算\"></a>补码的几种常见运算</h2><h3 id=\"计算相反数的补码\"><a href=\"#计算相反数的补码\" class=\"headerlink\" title=\"计算相反数的补码\"></a>计算相反数的补码</h3><p>很简单，先算正数的，之后全部取反再加一。比如我们计算-14的补码：</p>\n<ul>\n<li>14是$00001110_{2}$</li>\n<li>取反就是$11110001_{2}$</li>\n<li>再加一得到-14的补码：$11110010_{2}$<br>同理，从-14得到14的补码也是取反再加一，这种方法适用于所有求<strong>相反数</strong>的情况。</li>\n</ul>\n<h3 id=\"减法\"><a href=\"#减法\" class=\"headerlink\" title=\"减法\"></a>减法</h3><p>补码的优势在减法中充分体现：我们知道计算x+y很简单，只需要按位加法就行，只需要一套关于加法的电路，而补码的优势在于求减法的时候x-y可以变成**x+(-y)**，这时候就把减法化成加法和相反数了（在相反数的过程中也只有一次加法）。</p>\n<h3 id=\"位拓展\"><a href=\"#位拓展\" class=\"headerlink\" title=\"位拓展\"></a>位拓展</h3><h4 id=\"符号拓展\"><a href=\"#符号拓展\" class=\"headerlink\" title=\"符号拓展\"></a>符号拓展</h4><p>需要先把一位的符号位复制过去到高位，其余对应位数对应复制过去即可。如下：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co14.png\" alt=\"signed\"></p>\n<h4 id=\"符号拓展-1\"><a href=\"#符号拓展-1\" class=\"headerlink\" title=\"符号拓展\"></a>符号拓展</h4><p>其实本质是一样的，但是高位全部置0，低位复制过去即可：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co15.png\" alt=\"unsigned\"></p>\n<h3 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h3><p>&#x3D;、≠、&gt;、&lt;、≥、≤这六种比较都可以通过&lt;和&#x3D;符号来实现，此处略，很简单的。</p>\n<h4 id=\"小于符号的实现\"><a href=\"#小于符号的实现\" class=\"headerlink\" title=\"小于符号的实现\"></a>小于符号的实现</h4><p>我们判断a小于b是通过a-b小于0来实现的，实际使用中判断a-b的符号位即可判断是否小于。</p>\n<h5 id=\"符号数\"><a href=\"#符号数\" class=\"headerlink\" title=\"符号数\"></a>符号数</h5><p>在一个字是4bit的时候，遇上$a&#x3D;0$，$b&#x3D;-8$的时候，结果会因为溢出，变成$1000_{2}$，此时符号位变成了1，判断为a比b小，很明显是不对的。对于这种情况我们就需要<strong>符号位拓展</strong>：</p>\n<ul>\n<li>2个N位二进制补码的操作数均扩展1位符号位（即在最高位的左侧加上一位一摸一样的符号位）</li>\n<li>进行N+1位二进制补码的减法计算</li>\n</ul>\n<p>此时会发现$0-8&#x3D;0+(-8)&#x3D;00000_{2}+00111_{2}+00001_{2}&#x3D;01000_{2}$，符号位为0，那么判断为a比b大，符合实际情况。</p>\n<h5 id=\"无符号数\"><a href=\"#无符号数\" class=\"headerlink\" title=\"无符号数\"></a>无符号数</h5><p>如果两个数都是无符号数，需要将这俩个数视作符号数之后<strong>符号位拓展</strong>，并且都拓展一个0即可同上判断了。</p>\n<h4 id=\"相等符号的实现\"><a href=\"#相等符号的实现\" class=\"headerlink\" title=\"相等符号的实现\"></a>相等符号的实现</h4><ol>\n<li>使用XOR运算得到一个c，对c的每一位做OR运算得到一个bit，为1则$a&#x3D;b$为假，反之为真</li>\n<li>执行减法运算得到一个c，之后同上</li>\n</ol>\n<h3 id=\"乘法\"><a href=\"#乘法\" class=\"headerlink\" title=\"乘法\"></a>乘法</h3><p>基本原理就是无符号数的乘法。步骤就是先把a和b的绝对值按照无符号数乘法算出来，最后单独判断符号。<br><del><strong>TODO:讲义内没说怎么做的无符号数乘法，后面再看</strong></del><br>无符号数乘法和手算乘法一样，但是由于只有0和1更加简单，对应每一位乘数，如果该位为1，则将被乘数复制到位积内，若为0，这该位对应的位积为0，从低位到高位每个乘数的位都进行一次操作，最后按照乘数每一位的位置n，对各个位积向左移位n次，再累加即可。</p>\n<h3 id=\"除法\"><a href=\"#除法\" class=\"headerlink\" title=\"除法\"></a>除法</h3><p>对于计算机来说除法最难实现，核心是“试商”。<br>对于二进制数，商只会有0和1两种情况，较为简单：</p>\n<ul>\n<li>计算商的每位时，仅需做一次减法</li>\n<li>根据减法结果的符号位判断是否够减<br>如下图所示：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co16.png\" alt=\"devide\"></li>\n</ul>\n<h4 id=\"无符号数除法\"><a href=\"#无符号数除法\" class=\"headerlink\" title=\"无符号数除法\"></a>无符号数除法</h4><p>流程与上方相同，每次从被除数取出一位，构成<strong>中间余数</strong>的末位，然后“试商”，用中间余数减去除数，根据结果判断商的这一位是否为1，如果除数有N位，一定记住符号位拓展，中间余数得拓展到N+1位。</p>\n<h4 id=\"符号数除法\"><a href=\"#符号数除法\" class=\"headerlink\" title=\"符号数除法\"></a>符号数除法</h4><p>先取绝对值做除法，之后单独判断符号，略。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><h2 id=\"计算机基本认识\"><a href=\"#计算机基本认识\" class=\"headerlink\" title=\"计算机基本认识\"></a>计算机基本认识</h2><p>没啥用，随便看看得了</p>\n<h2 id=\"数制-1\"><a href=\"#数制-1\" class=\"headerlink\" title=\"数制\"></a>数制</h2><ul>\n<li>掌握变换数制的方法</li>\n<li>掌握浮点数的编码（1+8+23）</li>\n<li>了解加减乘除运算的原理（都是基于加法（和一些内置运算））</li>\n</ul>\n","feature":true,"text":"L1-基本认识与数制，没啥用，看看得了...","permalink":"/post/buaa-co-pre-1","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"北航计组","slug":"北航计组","count":2,"path":"api/categories/北航计组.json"},{"name":"学习笔记","slug":"北航计组/学习笔记","count":2,"path":"api/categories/北航计组/学习笔记.json"}],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":2,"path":"api/tags/计算机组成原理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%86\"><span class=\"toc-text\">基本认识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%86\"><span class=\"toc-text\">计算机的基本认识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%91%E5%B1%95%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">发展过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%A4%A7%E8%AE%A4%E8%AF%86\"><span class=\"toc-text\">重大认识</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%BA%94%E7%94%A8%E4%B8%8E%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">计算机的应用与分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">分类</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A1%AC%E4%BB%B6%E6%9E%84%E6%88%90\"><span class=\"toc-text\">计算机的基本硬件构成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CPU\"><span class=\"toc-text\">CPU</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E5%AD%98%E5%82%A8%E5%99%A8\"><span class=\"toc-text\">主存储器</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">计算机的层次结构</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%88%B6\"><span class=\"toc-text\">数制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E8%BF%9B%E5%88%B6%E5%8F%8A%E5%85%B6%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">常见进制及其转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">表示方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">二进制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">进制转换</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD\"><span class=\"toc-text\">常见术语</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8A%A0%E6%B3%95\"><span class=\"toc-text\">二进制加法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">步骤</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">整数的二进制表示方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">数字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">编码空间</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B0\"><span class=\"toc-text\">二进制无符号数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%AC%A6%E5%8F%B7%E6%95%B0\"><span class=\"toc-text\">二进制符号数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%A0%81%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">原码方案</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E7%A0%81%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">补码方案</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E6%95%B0%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">浮点数的二进制表示方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E6%95%B0%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">浮点数格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%81%8F%E9%98%B6%E8%AE%A1%E6%95%B0%E6%B3%95\"><span class=\"toc-text\">偏阶计数法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E7%B2%BE%E5%BA%A6%E6%B5%AE%E7%82%B9\"><span class=\"toc-text\">双精度浮点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5\"><span class=\"toc-text\">特殊情况</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99\"><span class=\"toc-text\">编码规则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E6%BA%A2%E5%92%8C%E4%B8%8B%E6%BA%A2\"><span class=\"toc-text\">上溢和下溢</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E7%A0%81%E7%9A%84%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">补码的几种常见运算</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E7%9B%B8%E5%8F%8D%E6%95%B0%E7%9A%84%E8%A1%A5%E7%A0%81\"><span class=\"toc-text\">计算相反数的补码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%8F%E6%B3%95\"><span class=\"toc-text\">减法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">位拓展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">符号拓展</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E6%8B%93%E5%B1%95-1\"><span class=\"toc-text\">符号拓展</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">比较</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E4%BA%8E%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">小于符号的实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E6%95%B0\"><span class=\"toc-text\">符号数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B0\"><span class=\"toc-text\">无符号数</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E7%AD%89%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">相等符号的实现</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B9%98%E6%B3%95\"><span class=\"toc-text\">乘法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%99%A4%E6%B3%95\"><span class=\"toc-text\">除法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B0%E9%99%A4%E6%B3%95\"><span class=\"toc-text\">无符号数除法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E6%95%B0%E9%99%A4%E6%B3%95\"><span class=\"toc-text\">符号数除法</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E6%9C%AC%E8%AE%A4%E8%AF%86\"><span class=\"toc-text\">计算机基本认识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%88%B6-1\"><span class=\"toc-text\">数制</span></a></li></ol></li></ol>","author":{"name":"大仓鼠","slug":"blog-author","avatar":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/%E7%BD%91%E7%AB%99%E7%B4%A0%E6%9D%90%E5%9B%BE%E7%89%87/%E5%A4%B4%E5%83%8Flogo/head.jpg","link":"/","description":"我的博客（隐藏版）","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"北航计组-预习0-预习准备","uid":"ee17b1d2d4f98e58465a0cc1225842a7","slug":"buaa-co-pre-0","date":"2024-07-26T16:00:00.000Z","updated":"2024-07-28T05:59:22.862Z","comments":true,"path":"api/articles/buaa-co-pre-0.json","keywords":null,"cover":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co1.jpg?x-oss-process=image/resize,w_1000","text":"今天开始预习计组，但是也不清楚预习什么，于是先整理一下思路...","permalink":"/post/buaa-co-pre-0","photos":[],"count_time":{"symbolsCount":490,"symbolsTime":"1 mins."},"categories":[{"name":"北航计组","slug":"北航计组","count":2,"path":"api/categories/北航计组.json"},{"name":"学习笔记","slug":"北航计组/学习笔记","count":2,"path":"api/categories/北航计组/学习笔记.json"}],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":2,"path":"api/tags/计算机组成原理.json"}],"author":{"name":"大仓鼠","slug":"blog-author","avatar":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/%E7%BD%91%E7%AB%99%E7%B4%A0%E6%9D%90%E5%9B%BE%E7%89%87/%E5%A4%B4%E5%83%8Flogo/head.jpg","link":"/","description":"我的博客（隐藏版）","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}