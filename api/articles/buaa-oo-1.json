{"title":"北航面向对象-展开表达式1","uid":"64fde8f4f830d3f6e242ae5002f50c98","slug":"buaa-oo-1","date":"2025-02-27T16:00:00.000Z","updated":"2025-03-03T02:01:39.797Z","comments":true,"path":"api/articles/buaa-oo-1.json","keywords":null,"cover":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-oo1/oocover.jpeg","content":"<h1 id=\"简单表达式的展开\"><a href=\"#简单表达式的展开\" class=\"headerlink\" title=\"简单表达式的展开\"></a>简单表达式的展开</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>已转载到oo平台：<a href=\"http://oo.buaa.edu.cn/assignment/606/discussion/1651\">http://oo.buaa.edu.cn/assignment/606/discussion/1651</a></p></blockquote>\n<p><a href=\"http://oo.buaa.edu.cn/assignment/606/discussion/1651\">点我跳转</a></p>\n<h2 id=\"题目重述\"><a href=\"#题目重述\" class=\"headerlink\" title=\"题目重述\"></a>题目重述</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>给你一个表达式，一个表达式可以包含一个或者多个项，一个项可以包含多个因子。</p>\n<p>表达式内的项用加减号连接</p>\n<p>项内的因子用乘号连接</p>\n<p>因子为指数形式，底数可以为带符号整数、<code>x</code>或者一个表达式（用括号包起来），幂次仅能为非负的带符号整数。</p>\n<p>要求化简表达式为不含括号的形式。</p></blockquote>\n<p>以上描述可以较为清晰简洁的重述出题目的框架，部分细节已经省略，需要注意的是表达式里面可能包含空白字符、表达式前可以加上<strong>一个</strong>符号，项的前面可以加上<strong>一个</strong>符号。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><h3 id=\"初步解析\"><a href=\"#初步解析\" class=\"headerlink\" title=\"初步解析\"></a>初步解析</h3><p>由于表达式、项之前都可能存在多余的符号或者空白字符，我们先对字符串进行预处理如下：</p>\n<ul>\n<li>符号处理<ul>\n<li>两个相同的符号处理为一个<code>+</code></li>\n<li>两个不同的符号处理为一个<code>+</code></li>\n<li>特判一下可能三个符号相连的情况</li>\n</ul>\n</li>\n<li>空白字符处理<ul>\n<li>删除所有的<code>ascii == 32 || ascii == 9</code>的字符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"输出结果分析\"><a href=\"#输出结果分析\" class=\"headerlink\" title=\"输出结果分析\"></a>输出结果分析</h3><p>我们也能很容易地看出，任何表达式在这种情况下都能够化简为多项式（Polynominal）的形式，也就是说，我们的式子应该表示为<code>x</code>的次方以及系数的形式，当然还有一个小细节就是<code>x^0=1</code>以及<code>x</code>的一次方就是<code>x</code>。</p>\n<p>对此我们构建一个Polynominal的类即可，从而达到面向对象课程的要求（逃）</p>\n<h3 id=\"递归下降\"><a href=\"#递归下降\" class=\"headerlink\" title=\"递归下降\"></a>递归下降</h3><h4 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>递归下降的概念我们早有耳闻，但是由于很多同学确实没有自己完整地写一个递归下降出来，以前出的题目都是填空的形式，因此这次作业挑战性也不算很小。</p>\n<p>我们的思路是依照表达式、项、因子这三个层次进行递归，简而言之就是：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>表达式里面拆出项，项里面拆出因子，因子计算出值（多项式），之后一层一层返回。</strong></p></blockquote>\n<h4 id=\"一些细节\"><a href=\"#一些细节\" class=\"headerlink\" title=\"一些细节\"></a>一些细节</h4><p>具体而言就是，我输入一个字符串，生成一个表达式的类，这个类具有一个能够返回其本身化简后的多项式的一个方法，输入的就是经过预处理（上面说过的那个）的字符串，在方法内部的操作就是<strong>分割</strong>字符串为许多项。</p>\n<p>这个时候关键的一点来了，由于我们是递归，对于项来说我们依然可以建立一个类，这个类有一个可以<strong>返回其本身化简后的多项式</strong>的一个方法，而我们在表达式的方法内已经分割出来许多形似项的子字符串，这些子字符串作为项的类就能够通过调用其内部的<strong>返回多项式</strong>的方法计算出值，从而给到表达式的方法继续计算最终的值。</p>\n<p>当然此时你的项的这个方法内部可能是还没开始编写的，但是没关系，你只需要记住你的这个方法输入就是你的项，而且<strong>返回的值一定是个多项式</strong>即可，这样就能做到递归下降。</p>\n<p>同理，因子也具有类似的方法，而且由于因子的简单性，我们在大部分情况下可以直接从字符串计算出因子对应的多项式的值并且直接返回，至此，递归下降结束了，因为我们有了最终的返回值并且一步一步返回到项、表达式、最终结果里面。</p>\n<h4 id=\"特殊情况\"><a href=\"#特殊情况\" class=\"headerlink\" title=\"特殊情况\"></a>特殊情况</h4><p>由于因子里面可能包含表达式的括号，因此在匹配到表达式的时候应该继续调用表达式的这个<strong>返回多项式</strong>的这个方法，再次进行如上的递归即可。从调用者的角度来看，反正给进去的是一个字符串，得到的是一个多项式，那么拿到多项式之后我们再来加减乘就容易许多了。</p>\n<h3 id=\"代码难点以及我的解法\"><a href=\"#代码难点以及我的解法\" class=\"headerlink\" title=\"代码难点以及我的解法\"></a>代码难点以及我的解法</h3><p>考虑到后续还需要加入三角函数以及自定义函数，利用代码来匹配字符串可能会显得可拓展性低（毕竟需要增添不少专用来匹配的代码），我在此选择了<strong>正则表达式</strong>来解决问题。</p>\n<p>我的思路是利用<code>|</code>来进行多路的选择，后续需要匹配三角函数或者别的函数的时候只需要在后面继续加多路选择即可。</p>\n<p>根据目前的情况，我们主要涉及的最困难的正则表达式是以下两种：</p>\n<h4 id=\"从表达式匹配项\"><a href=\"#从表达式匹配项\" class=\"headerlink\" title=\"从表达式匹配项\"></a>从表达式匹配项</h4><p>对于表达式来说，内部包含的项除了括号内和<code>[*^]</code>的后续第一个符号一定不包含加减号，因此我们匹配的思路就是先匹配非嵌套括号，之后匹配非括号和加减号的数字以及其他符号，最后特判<code>[*^][+-]?</code>的这种情况。</p>\n<p>为了不泄露代码就不粘贴我的表达式了，但是我画了个图来表示：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-oo1/1.PNG\"></p>\n<h4 id=\"从项匹配因子\"><a href=\"#从项匹配因子\" class=\"headerlink\" title=\"从项匹配因子\"></a>从项匹配因子</h4><p>这个相比之前的情况会更加复杂一些，如下：</p>\n<ol>\n<li><code>x</code>的幂次因子，也就是<code>[+-]</code>后接一个<code>\\w</code>这种一次方的或者<code>\\w^[+-]?\\d+</code>这种多次方的。</li>\n<li>带括号的表达式因子，由于暂时不考虑嵌套，利用<code>\\([^()]+\\)</code>匹配非空括号即可，后续如果有多次方也就同上，加上<code>^[+-]?\\d+</code>即可。</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我后续画图里面可能用了<code>\\w+</code>来匹配<code>x</code>，但是因为就这一个是字母，暂时无伤大雅，后续添加三角函数后改成<code>\\w</code>之后再去扩写正则表达式即可。</p></blockquote>\n<p>同样地，为了方便理解，我在这贴一张图：<br><img src=\"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-oo1/2.PNG\"></p>\n<h3 id=\"可拓展性？\"><a href=\"#可拓展性？\" class=\"headerlink\" title=\"可拓展性？\"></a>可拓展性？</h3><p>之前和助教沟通的时候被问到可拓展性的问题，私以为如果掌握正则表达式较好的同学对于<code>|</code>这个符号应该是很熟悉的，利用这个符号就可以实现如我上面贴的两张图内的<strong>多路分支</strong>的效果，由此遇上更加复杂的表达式也不过仅仅添加几个分支罢了。</p>\n<p>最关键的是，你<strong>完全不需要</strong>修改除了正则表达式之外的内容（当然你还是不得不写点因子处理的部分）就能够实现对于更复杂表达式的匹配，至少对于我来说写代码的压力小了太多了。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>举例来说：</p>\n<p><code>[0-9]+|[0-9]+[*^][0-9]+</code>这个正则表达式就能够同时匹配上无符号数字和数字乘以（或者幂次）数字，如果你需要加上数字除以数字也很容易，在之后继续添加上<code>（前略）|[0-9]+/[0-9]+</code>即可，不需要修改之前的内容，仅仅添加即可。</p></blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>最近看到许多同学花费大量代码编写<code>parse</code>等类似方法，但是暂时没有看见完全利用了正则表达式的强大功能的解法，故在此分享，也希望这个思路能够给大家一些新的想法来写出更简洁的代码。</p>\n<p>毕竟面向对象咱就得狠狠写点好看的代码对吧 (QWQ)</p>\n","feature":false,"text":"面向对象第一次作业心得和我的奇妙做法，展开表达式...","permalink":"/post/buaa-oo-1","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"北航面向对象","slug":"北航面向对象","count":2,"path":"api/categories/北航面向对象.json"},{"name":"学习笔记","slug":"北航面向对象/学习笔记","count":2,"path":"api/categories/北航面向对象/学习笔记.json"}],"tags":[{"name":"面向对象","slug":"面向对象","count":2,"path":"api/tags/面向对象.json"},{"name":"表达式","slug":"表达式","count":2,"path":"api/tags/表达式.json"},{"name":"递归下降","slug":"递归下降","count":2,"path":"api/tags/递归下降.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%B1%95%E5%BC%80\"><span class=\"toc-text\">简单表达式的展开</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E9%87%8D%E8%BF%B0\"><span class=\"toc-text\">题目重述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E6%AD%A5%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">初步解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%88%86%E6%9E%90\"><span class=\"toc-text\">输出结果分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E4%B8%8B%E9%99%8D\"><span class=\"toc-text\">递归下降</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82\"><span class=\"toc-text\">一些细节</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E6%83%85%E5%86%B5\"><span class=\"toc-text\">特殊情况</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E9%9A%BE%E7%82%B9%E4%BB%A5%E5%8F%8A%E6%88%91%E7%9A%84%E8%A7%A3%E6%B3%95\"><span class=\"toc-text\">代码难点以及我的解法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E9%A1%B9\"><span class=\"toc-text\">从表达式匹配项</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E9%A1%B9%E5%8C%B9%E9%85%8D%E5%9B%A0%E5%AD%90\"><span class=\"toc-text\">从项匹配因子</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%8B%93%E5%B1%95%E6%80%A7%EF%BC%9F\"><span class=\"toc-text\">可拓展性？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"大仓鼠","slug":"blog-author","avatar":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/%E7%BD%91%E7%AB%99%E7%B4%A0%E6%9D%90%E5%9B%BE%E7%89%87/%E5%A4%B4%E5%83%8Flogo/head.jpg","link":"/","description":"我的博客（隐藏版）","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"折腾笔记-基于GithubPages制作博客里世界","uid":"73415a1b5e681c28d78c3a872e437bc5","slug":"net-daily-ssl-domain","date":"2024-07-25T16:00:00.000Z","updated":"2024-07-28T10:06:31.896Z","comments":true,"path":"api/articles/net-daily-ssl-domain.json","keywords":null,"cover":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/post1/github-pages.png","text":"本文介绍了一个大铸币折腾GitHubPages与hexo的过程，为了搭建一个博客踩的坑也记录下来了，希望能够启发后人解决问题的思路。...","permalink":"/post/net-daily-ssl-domain","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"折腾笔记","slug":"折腾笔记","count":2,"path":"api/categories/折腾笔记.json"},{"name":"网页","slug":"折腾笔记/网页","count":2,"path":"api/categories/折腾笔记/网页.json"}],"tags":[{"name":"GithubPages","slug":"GithubPages","count":1,"path":"api/tags/GithubPages.json"},{"name":"SSL","slug":"SSL","count":1,"path":"api/tags/SSL.json"},{"name":"Nginx","slug":"Nginx","count":1,"path":"api/tags/Nginx.json"}],"author":{"name":"大仓鼠","slug":"blog-author","avatar":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/%E7%BD%91%E7%AB%99%E7%B4%A0%E6%9D%90%E5%9B%BE%E7%89%87/%E5%A4%B4%E5%83%8Flogo/head.jpg","link":"/","description":"我的博客（隐藏版）","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"北航计组-预习14-流水线及其冒险","uid":"557f6f42c54a8b328356c109feb241ff","slug":"buaa-co-pre-14","date":"2024-09-02T16:00:00.000Z","updated":"2025-02-28T12:46:49.710Z","comments":true,"path":"api/articles/buaa-co-pre-14.json","keywords":null,"cover":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/buaa/buaa-os1/co1.jpg?x-oss-process=image/resize,w_600","text":"L14-流水线及其冒险，但是莫名其妙没有11、12和13，真服了，序号能不能连续一点...","permalink":"/post/buaa-co-pre-14","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"北航计组","slug":"北航计组","count":11,"path":"api/categories/北航计组.json"},{"name":"学习笔记","slug":"北航计组/学习笔记","count":11,"path":"api/categories/北航计组/学习笔记.json"}],"tags":[{"name":"计算机组成原理","slug":"计算机组成原理","count":11,"path":"api/tags/计算机组成原理.json"},{"name":"CPU","slug":"CPU","count":4,"path":"api/tags/CPU.json"},{"name":"流水线","slug":"流水线","count":1,"path":"api/tags/流水线.json"}],"author":{"name":"大仓鼠","slug":"blog-author","avatar":"https://blogphoto-xyh.oss-cn-chengdu.aliyuncs.com/%E7%BD%91%E7%AB%99%E7%B4%A0%E6%9D%90%E5%9B%BE%E7%89%87/%E5%A4%B4%E5%83%8Flogo/head.jpg","link":"/","description":"我的博客（隐藏版）","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}